{"version":3,"file":"course_modules.min.js","sources":["../src/course_modules.js"],"sourcesContent":["/**\n * This file is part of Moodle - http://moodle.org/\n *\n * Moodle is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Moodle is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @package\n * @author    Guy Thomas\n * @copyright Copyright (c) 2016 Open LMS\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * Course main functions.\n */\ndefine(\n    [\n        'jquery',\n        'core/ajax',\n        'theme_snap/util',\n        'theme_snap/ajax_notification',\n        'core/str',\n        'core/event'\n    ],\n    function($, ajax, util, ajaxNotify, str, Event) {\n\n        /**\n         * Module has been completed.\n         * @param {jQuery} module\n         * @param {string} completionhtml\n         */\n        var updateModCompletion = function(module, completionhtml) {\n            // Update completion tracking icon.\n            module.find('.snap-asset-completion-tracking').html(completionhtml);\n            module.find('.btn-link').focus();\n            $(document).trigger('snapModuleCompletionChange', module);\n        };\n\n        /**\n         * Listen for manual completion toggle.\n         */\n        var listenManualCompletion = function() {\n            $('.course-content').on('submit', 'form.togglecompletion', function(e) {\n                e.preventDefault();\n                var form = $(this);\n\n                if (form.hasClass('ajaxing')) {\n                    // Request already in progress.\n                    return;\n                }\n\n                var id = $(form).find('input[name=\"id\"]').val();\n                var completionState = $(form).find('input[name=\"completionstate\"]').val();\n                var module = $(form).parents('li.snap-asset').first();\n                form.addClass('ajaxing');\n\n                ajax.call([\n                    {\n                        methodname: 'theme_snap_course_module_completion',\n                        args: {id: id, completionstate: completionState},\n                        done: function(response) {\n\n                            ajaxNotify.ifErrorShowBestMsg(response).done(function(errorShown) {\n                                form.removeClass('ajaxing');\n                                if (errorShown) {\n                                    return;\n                                } else {\n                                    // No errors, update completion html for this module instance.\n                                    updateModCompletion(module, response.completionhtml);\n                                }\n                            });\n                        },\n                        fail: function(response) {\n                            ajaxNotify.ifErrorShowBestMsg(response).then(function() {\n                                form.removeClass('ajaxing');\n                            });\n                        }\n                    }\n                ], true, true);\n\n            });\n        };\n\n        /**\n         * Reveal page module content.\n         *\n         * @param {jQuery} pageMod\n         * @param {string} completionHTML - updated completionHTML\n         */\n        var revealPageMod = function(pageMod, completionHTML) {\n            pageMod.find('.pagemod-content').slideToggle(\"fast\", function() {\n                // Animation complete.\n                if (pageMod.is('.state-expanded')) {\n                    pageMod.attr('aria-expanded', 'true');\n                    pageMod.find('.pagemod-content').focus();\n\n                } else {\n                    pageMod.attr('aria-expanded', 'false');\n                    pageMod.focus();\n                }\n\n            });\n\n            if (completionHTML) {\n                updateModCompletion(pageMod, completionHTML);\n            }\n        };\n\n        /**\n         * Page mod toggle content.\n         */\n        var listenPageModuleReadMore = function() {\n            var pageToggleSelector = \".modtype_page .instancename,.pagemod-readmore,.pagemod-content .snap-action-icon\";\n            $(document).on(\"click\", pageToggleSelector, function(e) {\n                var pageMod = $(this).closest('.modtype_page');\n                util.scrollToElement(pageMod);\n                var isexpanded = pageMod.hasClass('state-expanded');\n                pageMod.toggleClass('state-expanded');\n\n                var readmore = pageMod.find('.pagemod-readmore');\n\n                var pageModContent = pageMod.find('.pagemod-content');\n                if (pageModContent.data('content-loaded') == 1) {\n                    // Content is already available so reveal it immediately.\n                    revealPageMod(pageMod);\n                    var readPageUrl = M.cfg.wwwroot + '/theme/snap/rest.php?action=read_page&contextid=' +\n                        readmore.data('pagemodcontext');\n                    if (!isexpanded) {\n                        $.ajax({\n                            type: \"GET\",\n                            async: true,\n                            url: readPageUrl,\n                            success: function(data) {\n                                ajaxNotify.ifErrorShowBestMsg(data).done(function(errorShown) {\n                                    if (errorShown) {\n                                        return;\n                                    } else {\n                                        // No errors, update completion html for this page mod instance.\n                                        updateModCompletion(pageMod, data.completionhtml);\n                                    }\n                                });\n                            }\n                        });\n                    }\n                } else {\n                    if (!isexpanded) {\n                        // Content is not available so request it.\n                        var loadingStrPromise = str.get_string('loading', 'theme_snap');\n                        $.when(loadingStrPromise).done(function(loadingStr) {\n                            pageMod.find('.contentafterlink').prepend(\n                                '<div class=\"ajaxstatus alert alert-info\">' + loadingStr + '</div>'\n                            );\n                        });\n                        var getPageUrl = M.cfg.wwwroot + '/theme/snap/rest.php?action=get_page&contextid=' +\n                            readmore.data('pagemodcontext');\n                        $.ajax({\n                            type: \"GET\",\n                            async: true,\n                            url: getPageUrl,\n                            success: function(data) {\n                                ajaxNotify.ifErrorShowBestMsg(data).done(function(errorShown) {\n                                    if (errorShown) {\n                                        return;\n                                    } else {\n                                        // No errors, reveal page mod.\n                                        pageModContent.find('#pagemod-content-container').prepend(data.html);\n                                        pageModContent.data('content-loaded', 1);\n                                        pageMod.find('.contentafterlink .ajaxstatus').remove();\n                                        revealPageMod(pageMod, data.completionhtml);\n                                        Event.notifyFilterContentUpdated('.pagemod-content');\n                                    }\n                                });\n                            }\n                        }).then(\n                            ()=>{\n                                $(document).trigger('snap-course-content-loaded');\n                            }\n                        );\n                    } else {\n                        revealPageMod(pageMod);\n                    }\n                }\n\n                e.preventDefault();\n            });\n        };\n\n        /**\n         * Light box media.\n         * @param {str|jQuery} resourcemod\n         */\n        var lightboxMedia = function(resourcemod) {\n            /**\n             * Ensure lightbox container exists.\n             *\n             * @param {string} appendto\n             * @param {function} onclose\n             * @returns {*|jQuery|HTMLElement}\n             */\n            var lightbox = function(appendto, onclose) {\n                var lbox = $('#snap-light-box');\n                if (lbox.length === 0) {\n                    $(appendto).append('<div id=\"snap-light-box\" tabindex=\"-1\">' +\n                        '<div id=\"snap-light-box-content\"></div>' +\n                        '<a id=\"snap-light-box-close\" class=\"pull-right snap-action-icon snap-icon-close\" href=\"#\">' +\n                        '<small>Close</small>' +\n                        '</a>' +\n                        '</div>');\n                    $('#snap-light-box-close').click(function(e) {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        lightboxclose();\n                        if (typeof (onclose) === 'function') {\n                            onclose();\n                        }\n                    });\n                    lbox = $('#snap-light-box');\n                }\n                return lbox;\n            };\n\n            /**\n             * Close lightbox.\n             */\n            var lightboxclose = function() {\n                var lbox = lightbox();\n                lbox.remove();\n            };\n\n            /**\n             * Open lightbox and set content if necessary.\n             *\n             * @param {string} content\n             * @param {*} appendto\n             * @param {function} onclose\n             */\n            var lightboxopen = function(content, appendto, onclose) {\n                appendto = appendto ? appendto : $('body');\n                var lbox = lightbox(appendto, onclose);\n                if (content) {\n                    var contentdiv = $('#snap-light-box-content');\n                    contentdiv.html('');\n                    contentdiv.append(content);\n                }\n                lbox.addClass('state-visible');\n            };\n\n            var appendto = $('body');\n            var spinner = '<div class=\"loadingstat three-quarters\">' +\n                Y.Escape.html(M.util.get_string('loading', 'theme_snap')) +\n                '</div>';\n            lightboxopen(spinner, appendto, function() {\n                $(resourcemod).attr('tabindex', '-1').focus();\n                $(resourcemod).removeAttr('tabindex');\n            });\n\n            $.ajax({\n                type: \"GET\",\n                async: true,\n                url: M.cfg.wwwroot + '/theme/snap/rest.php?action=get_media&contextid=' + $(resourcemod).data('modcontext'),\n                success: function(data) {\n                    ajaxNotify.ifErrorShowBestMsg(data).done(function(errorShown) {\n                        if (errorShown) {\n                            return;\n                        } else {\n                            // No errors, open lightbox and update module completion.\n                            lightboxopen(data.html, appendto);\n                            updateModCompletion($(resourcemod), data.completionhtml);\n                            $(document).trigger('snapContentRevealed');\n                            $('#snap-light-box').focus();\n                        }\n                    });\n                }\n            });\n\n        };\n\n        return {\n\n            init: function(courseConfig) {\n\n                // Listeners.\n                if (courseConfig.loadPageInCourse) {\n                    listenPageModuleReadMore();\n                }\n                listenManualCompletion();\n\n                // Add toggle class for hide/show activities/resources - additional to moodle adding dim.\n                $(document).on(\"click\", '[data-action=hide],[data-action=show],[data-action=stealth]', function() {\n                    if ($(this).attr('data-action') === 'hide' ) {\n                        $(this).closest('li.activity').addClass('draft');\n                        $(this).closest('li.activity').removeClass('stealth');\n                    } else if ($(this).attr('data-action') === 'stealth') {\n                        $(this).closest('li.activity').removeClass('draft');\n                        $(this).closest('li.activity').addClass('stealth');\n                    } else if ($(this).attr('data-action') === 'show') {\n                        $(this).closest('li.activity').removeClass('draft');\n                        $(this).closest('li.activity').removeClass('stealth');\n                    }\n                });\n\n                // Make lightbox for list display of resources.\n                $(document).on('click', '.js-snap-media .snap-asset-link [href*=\"/mod/resource/view.php?id=\"]', function(e) {\n                    lightboxMedia($(this).closest('.snap-resource, .snap-extended-resource'));\n                    e.preventDefault();\n                });\n\n                // Make resource cards clickable.\n                $(document).on('click', '.snap-resource-card .snap-resource, .snap-extended-resource', function(e) {\n                    var trigger = $(e.target),\n                        hreftarget = '_self',\n                        link = $(trigger).closest('.snap-resource').find('.snap-asset-link a'),\n                        href = '';\n                    if (link.length > 0) {\n                        href = $(link).attr('href');\n                    }\n\n                    // Excludes any clicks in the actions menu, on links or forms.\n                    var selector = '.snap-asset-completion-tracking, ' +\n                        '.snap-asset-actions, .contentafterlink a, .ally-actions, ' +\n                        '.snap-header-card, .contentafterlink, .snap-asset-meta';\n                    var withintarget = $(trigger).closest(selector).length;\n                    if (!withintarget) {\n                        if ($(this).hasClass('js-snap-media')) {\n                            lightboxMedia(this);\n                        } else {\n                            if (href === '') {\n                                return;\n                            }\n                            if ($(link).attr('target') === '_blank') {\n                                hreftarget = '_blank';\n                            }\n                            sessionStorage.setItem('lastMod', $(this).attr('id'));\n                            window.open(href, hreftarget);\n                        }\n                        e.preventDefault();\n                    }\n                });\n            }\n        };\n    }\n);\n"],"names":["define","$","ajax","util","ajaxNotify","str","Event","updateModCompletion","module","completionhtml","find","html","focus","document","trigger","revealPageMod","pageMod","completionHTML","slideToggle","is","attr","lightboxMedia","resourcemod","lightbox","appendto","onclose","lbox","length","append","click","e","preventDefault","stopPropagation","lightboxclose","remove","lightboxopen","content","contentdiv","addClass","spinner","Y","Escape","M","get_string","removeAttr","type","async","url","cfg","wwwroot","data","success","ifErrorShowBestMsg","done","errorShown","init","courseConfig","loadPageInCourse","on","this","closest","scrollToElement","isexpanded","hasClass","toggleClass","readmore","pageModContent","readPageUrl","loadingStrPromise","when","loadingStr","prepend","getPageUrl","notifyFilterContentUpdated","then","form","id","val","completionState","parents","first","call","methodname","args","completionstate","response","removeClass","fail","target","hreftarget","link","href","sessionStorage","setItem","window","open"],"mappings":"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"}